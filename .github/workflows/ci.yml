name: CI
on:
  push:
    branches:
      - main
      - testing-environment
  pull_request:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
      - run: yarn install
      - run: yarn build

  format:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
      - run: yarn install
      - run: yarn format:check

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
      - run: yarn install
      - run: yarn lint

  test:
    name: Test
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13.4
        ports:
          - 5432:5432
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      api:
        image: ghcr.io/hack-as-a-service/api:main
        ports:
          - 5000:5000
        env:
          ROCKET_DATABASES: '{db = {url = "postgres://postgres:postgres@postgres:5432/postgres"}}'

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up development database
        run: "docker run --network host --rm -e 'DATABASE_URL=postgres://postgres:postgres@localhost:5432/postgres' ghcr.io/hack-as-a-service/migrator:main"
      - name: Run Cypress E2E tests
        uses: cypress-io/github-action@v2
        with:
          build: yarn build
          start: yarn start
          browser: chrome
          config: defaultCommandTimeout=7000
        env:
          NO_PROXY: "false"
          NEXT_PUBLIC_API_BASE: http://localhost:3000/api
      - name: Run Cypress Component tests
        uses: cypress-io/github-action@v2
        with:
          install: false
          command: yarn cypress run-ct --browser=chrome --config defaultCommandTimeout=7000
        env:
          NO_PROXY: "false"
      - uses: actions/upload-artifact@v2
        if: ${{ failure() }}
        with:
          path: cypress/videos/*.mp4

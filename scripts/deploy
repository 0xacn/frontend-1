#!/bin/bash

#                                        #
# Deploys the Hack as a Service frontend #
#                                        #

set -e

# Error handler
trap 'echo -e "\\n-------------------- SOMETHING WENT WRONG. --------------------\\n\\nYou may need to remove ~/.haas_frontend_deploy_lock before trying again."' ERR

# Check/set deploy lock
ssh -T -i $KEY_PATH deploy@$HAAS_IP << EOF
    if [[ ! -f ~/.haas_frontend_deploy_lock ]];
    then
        # Set up stuff
        rm -rf ~/haas_frontend
        touch ~/.haas_frontend_deploy_lock
    else
        echo 'Deploy already in progress'
        exit 1
    fi
EOF

# Upload files to server
echo "Uploading source to server..."
rsync -zr --exclude ".git/" -e "ssh -i $KEY_PATH" . deploy@$HAAS_IP:~/haas_frontend

ssh -T -i $KEY_PATH deploy@$HAAS_IP << EOF
    set -e

    cd ~/haas_frontend

    # Build some images
    docker build -t haas_frontend .

    echo -e "\nCreating haas_frontend_next..."
    HAAS_FRONTEND_NEXT=\$(docker run -d \
        --restart always \
        --network haas_admin \
        --name haas_frontend_next \
        haas_frontend)
    
    HAAS_FRONTEND_NEXT_IP=\$(docker inspect \$HAAS_FRONTEND_NEXT | jq -r .[0].NetworkSettings.Networks.haas_admin.IPAddress)

    echo "New container IP: \$HAAS_FRONTEND_NEXT_IP"
    
    echo -e "\nBeep boop boop..."
    sleep 5

    echo -e "\nSwitching reverse proxy over to new frontend deployment..."
    # Update Caddy config
    curl -fs -X PATCH -H "Content-Type: application/json" -d "{\"@id\": \"haas_frontend_upstream\", \"dial\": \"\$HAAS_FRONTEND_NEXT_IP:3000\"}" http://localhost:2019/id/haas_frontend_upstream

    echo -e "\nRenaming containers..."
    docker rename haas_frontend haas_frontend_prev || true
    docker rename haas_frontend_next haas_frontend

    echo -e "\nBoop borp bop..."
    sleep 5

    echo -e "\nShutting down previous deployment..."
    docker stop haas_frontend_prev || true
    docker rm haas_frontend_prev || true

    # Clean up
    rm -rf ~/haas_frontend
    rm ~/.haas_frontend_deploy_lock

    echo -e "\nDeploy complete :)"
EOF
